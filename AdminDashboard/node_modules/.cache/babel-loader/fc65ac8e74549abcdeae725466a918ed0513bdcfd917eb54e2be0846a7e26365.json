{"ast":null,"code":"var _jsxFileName = \"D:\\\\react app\\\\first\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = () => {\n    if (email === \"admin@civicfix.com\" && password === \"password\") {\n      navigate(\"/dashboard\"); // Redirect after successful login\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        className: \"w-full p-2 border rounded mb-3\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        className: \"w-full p-2 border rounded mb-3\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"H+iueE6ppXbrBS3eFHdSUQUe0Ps=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","email","setEmail","password","setPassword","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/react app/first/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    if (email === \"admin@civicfix.com\" && password === \"password\") {\r\n      navigate(\"/dashboard\"); // Redirect after successful login\r\n    } else {\r\n      alert(\"Invalid credentials. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md w-96\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Login</h2>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter Email\"\r\n          className=\"w-full p-2 border rounded mb-3\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          className=\"w-full p-2 border rounded mb-3\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={handleLogin}\r\n          className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,KAAK,KAAK,oBAAoB,IAAIE,QAAQ,KAAK,UAAU,EAAE;MAC7DH,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLM,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,gEAAgE;IAAAC,QAAA,eAC7EX,OAAA;MAAKU,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDX,OAAA;QAAIU,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDf,OAAA;QACEgB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,aAAa;QACzBP,SAAS,EAAC,gCAAgC;QAC1CQ,KAAK,EAAEd,KAAM;QACbe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFf,OAAA;QACEgB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,gBAAgB;QAC5BP,SAAS,EAAC,gCAAgC;QAC1CQ,KAAK,EAAEZ,QAAS;QAChBa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFf,OAAA;QACEsB,OAAO,EAAEd,WAAY;QACrBE,SAAS,EAAC,gEAAgE;QAAAC,QAAA,EAC3E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAxCID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAyB,EAAA,GADxBtB,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}